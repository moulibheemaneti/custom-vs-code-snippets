{
	"Create interface": {
		"prefix": "interface",
		"body": [
			"/// $2",
			"export interface $1 {",
			"    $3",
			"}",
			""
		],
		"description": "Log output to console"
	},
	"Refs along with Setters": {
		"prefix": "var-setters",
		"body": [
			"const $1 = ref<$2>($3);",
			"const set${1/(.)/${1:/capitalize}/} = (value: $2) => $1.value = value;"
		],
		"description": "Log output to console"
	},
	"Print shorcut - Console log": {
		"prefix": [
			"print",
			"conso",
			"consolelog",
			"csl"
		],
		"body": [
			"console.log(\"$1\",$2)"
		]
	},
	"Use My Fetch - Get": {
		"prefix": [
			"fetchget",
			"fg",
			"fetget"
		],
		"body": [
			"console.log(\"$1\",$2)"
		]
	},
	"API - Get": {
		"prefix": [
			"apiGet",
			"apiget"
		],
		"body": [
			"const apiGet$1 = async (): Promise<ApiResponse<$2>> => {",
			"const res = await fetch.get<$2>($3);",
			"",
			"if (!res.error){",
			"$4",
			"}",
			"",
			"return res;",
			"}"
		]
	},
	"API - Post": {
		"prefix": [
			"apiPost",
			"apipost"
		],
		"body": [
			"const apiPost$1 = async (): Promise<ApiResponse<$2>> => {",
			"const res = await fetch.post<$2>($3);",
			"",
			"if (!res.error){",
			"$4",
			"}",
			"",
			"return res;",
			"}"
		]
	},
	"API - Put": {
		"prefix": [
			"apiPut",
			"apiput"
		],
		"body": [
			"const apiPut$1 = async (): Promise<ApiResponse<$2>> => {",
			"const res = await fetch.put<$2>($3);",
			"",
			"if (!res.error){",
			"$4",
			"}",
			"",
			"return res;",
			"}"
		]
	},
	"API - Delete": {
		"prefix": [
			"apiDelete",
			"apiDel",
			"apidelete",
			"apidel"
		],
		"body": [
			"const apiDelete$1 = async (): Promise<ApiResponse<$2>> => {",
			"const res = await fetch.del<$2>($3);",
			"",
			"if (!res.error){",
			"$4",
			"}",
			"",
			"return res;",
			"}"
		]
	}
}
